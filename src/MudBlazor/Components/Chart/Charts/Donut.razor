@namespace MudBlazor.Charts
@inherits MudCategoryChartBase

@{
    var style = _hoveredSegment != null ? "overflow: visible;" : "";
}

<svg @attributes="UserAttributes" class="mud-chart-donut" width="@ParentWidth" height="@ParentHeight" viewBox="-@Radius -@Radius @(Radius * 2) @(Radius * 2)" style="@style">
    <Filters />
    <circle class="mud-donut-ring" cx="0" cy="0" r="@RadiusInner" stroke-width="@StrokeWidth"></circle>
    @foreach (var item in _circles)
    {
        <circle class="mud-chart-serie mud-donut-segment" 
                @onclick="() => SelectedIndex = item.Index" 
                stroke="@MudChartParent?.ChartOptions.ChartPalette.GetValue(item.Index % MudChartParent.ChartOptions.ChartPalette.Length)"
                stroke-width="@StrokeWidth"
                cx="@ToS(item.CX)"
                cy="@ToS(item.CY)"
                r="@ToS(item.Radius)"
                stroke-dasharray="@item.StrokeDashArray"
                stroke-dashoffset="@ToS(item.StrokeDashOffset)"
                @onmouseover="(e) => OnSegmentMouseOver(e, item)"
                @onmouseout="OnSegmentMouseOut">
        </circle>
    }
    <circle class="mud-donut-hole" cx="0" cy="0" r="@(RadiusInner - (StrokeWidth / 2))"></circle>

    @MudChartParent?.CustomGraphics

    @* Render the tooltip as an SVG group when a bar is hovered *@
    @if (_hoveredSegment is not null)
    {
        var color = MudChartParent?.ChartOptions.ChartPalette.GetValue(_hoveredSegment.Index % MudChartParent.ChartOptions.ChartPalette.Length)?.ToString() ?? string.Empty;

        if (string.IsNullOrWhiteSpace(MudChartParent?.ChartOptions.DefaultDataMarkerTooltipTitleFormat) == false)
        {
            var tooltipTitle = MudChartParent?.ChartOptions.DefaultDataMarkerTooltipTitleFormat
                .Replace("{{X_VALUE}}", _hoveredSegment.LabelXValue)
                .Replace("{{Y_VALUE}}", _hoveredSegment.LabelYValue);

            <ChartTooltip Title="@tooltipTitle" Color="@color" X="_hoveredSegment.LabelX" Y="_hoveredSegment.LabelY" />
        }
    }
</svg>
<Legend Data="@_legends" />
